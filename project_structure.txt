1. Chatbot/
├── 1.1 cache/
│   ├── __init__.py
│   └── llm_cache.py
│       └── [1.1.1] ColorLLMCache class
│           ├── get_rgb()
│           ├── store_rgb()
│           ├── get_simplified()
│           ├── store_simplified()
│           ├── save()
│           ├── load()
│           └── clear()
│
├── 1.2 data/
│   ├── expression_context_rules.json
│   ├── expression_definition.json
│   ├── known_modifiers.json
│   └── products.json
│
├── 1.3 extractors/
│   ├── brand/
│   ├── category/
│   └── color/
│       ├── __init__.py
│       ├── extractor.py
│
│       ├── extraction/
│       │   ├── __init__.py
│       │   ├── compound.py - TESTED ✅
│       │   │   ├── [1.3.1] extract_compound_phrases()
│       │   │   ├── [1.3.2] extract_from_adjacent()
│       │   │   ├── [1.3.3] split_tokens_to_parts()
│       │   │   ├── [1.3.4] extract_from_glued()
│       │   │   ├── [1.3.5] extract_from_split()
│       │   │   └── [1.3.6] attempt_mod_tone_pair()
│       │   │
│       │   ├── phrase_aggregator.py
│       │   │   ├── [1.3.7] extract_all_descriptive_color_phrases()
│       │   │   ├── [1.3.8] extract_phrases_from_segment()
│       │   │   └── [1.3.9] aggregate_color_phrase_results()
│       │   │
│  	    |   └── standalone.py
│       │       ├── [1.3.10] extract_standalone_phrases()
│       │       ├── [1.3.11] levenshtein_distance()
│       │       ├── [1.3.12] is_suffix_variant()
│       │       ├── [1.3.13] normalize_expression_input()
│       │       ├── [1.3.14] _inject_expression_modifiers()
│       │       ├── [1.3.15] _extract_filter_tokens()✅
│       │       ├── [1.3.16] _finalize_standalone_phrases()
│       │       └── [1.3.17] extract_lone_tones()✅
│       │    

│
│       ├── llm/
│       │   ├── __init__.py
│       │   ├── llm_api_client.py
│       │   │   ├── [1.3.18] buil_color_prompt()
│       │   │   ├── [1.3.19] build_llm_request_payload()
│       │   │   ├── [1.3.20] build_llm_headers()
│       │   │   ├── [1.3.21] _parse_rgb_tuple()
│       │   │   └── [1.3.22] query_llm_for_rgb()
│       │   │
│       │   ├── llm_rgb.py
│       │   │   ├── [1.3.23] resolve_rgb_with_llm()
│       │   │   ├── [1.3.24] get_rgb_from_descriptive_color_llm_first()
│       │   │   └── [1.3.25] _try_simplified_match()
│       │   │
│       │   └── simplifier.py
│       │       ├── [1.3.26] simplify_phrase_if_needed()
│       │       ├── [1.3.27] is_valid_tone()
│       │       ├── [1.3.28] extract_suffix_fallbacks()
│       │       ├── [1.3.29] build_prompt()
│       │       └── [1.3.30] simplify_color_description_with_llm()
│
│       ├── logic/
│       │   ├── color_categorizer.py- TESTED ✅
│       │   │   ├── [1.3.31] build_tone_modifier_mappings()
│       │   │   └── [1.3.32] format_tone_modifier_mappings()
│       │   │
│       │   ├── color_pipeline.py
│       │   │   ├── [1.3.33] process_color_phrase()
│       │   │   ├── [1.3.34] process_segment_colors()
│       │   │   ├── [1.3.35] resolve_fallback_tokens()
│       │   │
│       │   ├── compound_rule.py - TESTED ✅
│       │   │   └── [1.3.36] is_blocked_modifier_tone_pair()
│       │   │
│       │   ├── expression_matcher.py - TESTED ✅
│       │   │   ├── [1.3.37] get_valid_tokens()
│       │   │   ├── [1.3.38] extract_alias_matches()
│       │   │   ├── [1.3.39] map_expressions_to_tones()
│       │   │   ├── [1.3.40] apply_expression_context_rules()
│       │   │   └── [1.3.41] apply_expression_suppression_rules()
│       │   │
│       │   └── sentiment_router.py
│       │       └── [1.3.42] build_color_sentiment_summary()
│
│       ├── shared/
│       │   ├── constants.py  - TESTED ✅
│       │   │   ├── [1.3.43] BLOCKED_TOKENS
│       │   │   ├── [1.3.44] COSMETIC_NOUNS
│       │   │   ├── [1.3.45] EXPRESSION_SUPPRESSION_RULES
│       │   │   └── [1.3.46] SEMANTIC_CONFLICTS
│       │   │
│       │   └── vocab.py  - TESTED ✅
│       │       ├── [1.3.47] cosmetic_fallbacks
│       │       ├── [1.3.48] known_tones
│       │       └── [1.3.49] all_webcolor_names
│       └── utils/
│           ├── config_loader.py - TESTED ✅
│           │   ├── [1.3.50] load_json_from_data_dir()
│           │   ├── [1.3.51] load_known_modifiers()
│           │   ├── [1.3.52] load_known_suffix_tokens()
│           │   └── [1.3.53] load_expression_context_rules()
│           │
│           ├── expression_helpers.py - TESTED ✅
│           │   ├── [1.3.54] get_all_trigger_tokens() ✅
│           │   └── [1.3.55] get_glued_token_vocabulary()✅
│           │
│           ├── modifier_resolution.py - TESTED ✅
│           │   ├── [1.3.56] is_known_tone()✅
│           │   ├── [1.3.57] match_direct_modifier()✅
│           │   ├── [1.3.58] match_suffix_fallback()✅
│           │   ├── [1.3.59] fuzzy_match_modifier_safe() ✅
│           │   ├── [1.3.60] _fuzzy_match_modifier() ✅
│           │   ├── [1.3.61] lemmatize_token() ✅
│           │   ├── [1.3.62] resolve_modifier_token()✅
│           │   ├── [1.3.63] is_y_suffix_from_tone()✅
│           │   ├── [1.3.64] should_suppress_coumpound() ✅
│           │   ├── [1.3.65] is_modifier_compound_conflict() ✅
│           │   └── [1.3.66] fuzzy_token_match()✅
│           │
│           ├── nlp_utils.py - TESTED ✅
│           │   └── [1.3.67] are_antonyms() ✅
│           │
│           ├── rgb_distance.py - TESTED ✅
│           │   ├── [1.3.68] rgb_distance()✅
│           │   ├── [1.3.69] is_within_rgb_margin()✅
│           │   ├── [1.3.70] choose_representative_rgb()✅
│           │   ├── [1.3.71] find_similar_color_names()✅
│           │   └── [1.3.72] fuzzy_match_rgb_from_known_colors()✅
│           │
│           ├── token_utils.py - TESTED ✅
│           │   ├── [1.3.73] split_glued_tokens()✅
│           │   ├── [1.3.74] singularize()✅
│           │   └── [1.3.75] normalize_token()
│
├── 1.4 general/
│   └── utils/
│       ├── fuzzy_match.py - TESTED ✅
│       │   ├── [1.4.1] match_expression_aliases()✅
│       │   ├── [1.4.2] _should_accept_match()✅
│       │   ├── [1.4.3] _handle_multiword_alias()✅
│       │   ├── [1.4.4] _is_multiword_alias_match()✅
│       │   ├── [1.4.5] _has_token_overlap()✅
│       │   ├── [1.4.6] should_accept_multiword_alias()✅
│       │   ├── [1.4.7] _handle_singleword_alias()✅
│       │   ├── [1.4.8] _is_token_fuzzy_match()✅
│       │   ├── [1.4.9] _is_exact_alias_match()✅
│       │   ├── [1.4.10] is_exact_match()✅
│       │   ├── [1.4.11] is_strong_fuzzy_match()✅
│       │   ├── [1.4.12] is_embedded_alias_conflict()✅
│       │   ├── [1.4.13] is_negation_conflict()✅
│       │   └── [1.4.14] remove_subsumed_matches()
│       │
│       └── tokenize.py - TESTED ✅
│           └── [1.4.15] get_tokens_and_counts()✅
│
├── 1.5 price/
│   └── __init__.py
│
└── 1.6 pipelines/
    (currently empty or not yet audited)
	