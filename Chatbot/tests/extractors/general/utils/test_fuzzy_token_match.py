# Chatbot/tests/extractors/general/utils/test_fuzzy_token_match.py

import unittest
from Chatbot.extractors.general.utils.fuzzy_match import fuzzy_token_match

class TestFuzzyTokenMatch(unittest.TestCase):

    def test_case_01(self): self.assertTrue(fuzzy_token_match("glowy", "glowy"))
    def test_case_02(self): self.assertTrue(fuzzy_token_match("glow", "glowy"))
    def test_case_03(self): self.assertTrue(fuzzy_token_match("glow", "glowy", allow_prefix=False))
    def test_case_04(self): self.assertTrue(fuzzy_token_match("brigt", "bright", threshold=70))
    def test_case_05(self): self.assertTrue(fuzzy_token_match("brigt", "bright", threshold=90))
    def test_case_06(self): self.assertFalse(fuzzy_token_match("light", "night", blocklist={("light", "night")}))
    def test_case_07(self): self.assertFalse(fuzzy_token_match("night", "light", blocklist={("light", "night")}))
    def test_case_08(self): self.assertFalse(fuzzy_token_match("light", "night", blocklist={("night", "light")}))
    def test_case_09(self): self.assertFalse(fuzzy_token_match("softglamfinish", "soft glam"))
    def test_case_10(self): self.assertFalse(fuzzy_token_match("glamfinish", "soft glam"))
    def test_case_11(self): self.assertFalse(fuzzy_token_match("softglamfinish", "soft glam", allow_multiword=False))
    def test_case_12(self): self.assertFalse(fuzzy_token_match("very soft glam", "soft glam"))
    def test_case_13(self): self.assertFalse(fuzzy_token_match("shiny glittery", "glitter"))
    def test_case_14(self): self.assertTrue(fuzzy_token_match("bare", "barely-there", threshold=50))
    def test_case_15(self): self.assertTrue(fuzzy_token_match("gloss", "glossy"))
    def test_case_16(self): self.assertFalse(fuzzy_token_match("elegant", "glamorous"))
    def test_case_17(self): self.assertTrue(fuzzy_token_match("cool", "cool-toned"))
    def test_case_18(self): self.assertFalse(fuzzy_token_match("natural", "barely-there"))
    def test_case_19(self): self.assertTrue(fuzzy_token_match("natrual", "natural", threshold=70))
    def test_case_20(self): self.assertTrue(fuzzy_token_match("mat", "matte", threshold=80))
    def test_case_21(self): self.assertTrue(fuzzy_token_match("bare", "barely"))
    def test_case_22(self): self.assertFalse(fuzzy_token_match("bare", "bare minimum"))
    def test_case_23(self): self.assertFalse(fuzzy_token_match("glow", "glow up"))
    def test_case_24(self): self.assertFalse(fuzzy_token_match("glowup", "glow up", allow_multiword=False))
    def test_case_25(self): self.assertFalse(fuzzy_token_match("shiny gloss", "glow"))
    def test_case_26(self): self.assertTrue(fuzzy_token_match("shine", "shiny"))
    def test_case_27(self): self.assertTrue(fuzzy_token_match("icy", "ice", threshold=65))
    def test_case_28(self): self.assertFalse(fuzzy_token_match("snow", "ice"))
    def test_case_29(self): self.assertTrue(fuzzy_token_match("barely", "barely-there", allow_multiword=False))
    def test_case_30(self): self.assertTrue(fuzzy_token_match("skinlike", "skin-like", threshold=65))
    def test_case_31(self): self.assertTrue(fuzzy_token_match("glitz", "glitter", threshold=65))
    def test_case_32(self): self.assertTrue(fuzzy_token_match("natrual glam", "natural glam"))
    def test_case_33(self): self.assertFalse(fuzzy_token_match("very natural", "natural glam"))
    def test_case_34(self): self.assertTrue(fuzzy_token_match("eleg", "elegant", threshold=60))
    def test_case_35(self): self.assertFalse(fuzzy_token_match("bold", "subtle"))
    def test_case_36(self): self.assertTrue(fuzzy_token_match("dramatic", "drama"))
    def test_case_37(self): self.assertFalse(fuzzy_token_match("no makeup", "natural", threshold=50))
    def test_case_38(self): self.assertFalse(fuzzy_token_match("grungy", "fresh"))
    def test_case_39(self): self.assertTrue(fuzzy_token_match("barelythere", "barely-there", threshold=70))
    def test_case_40(self): self.assertTrue(fuzzy_token_match("classic", "classy", threshold=70))
    def test_case_41(self): self.assertTrue(fuzzy_token_match("sparkle", "sparkly"))
    def test_case_42(self): self.assertTrue(fuzzy_token_match("shineup", "shine"))
    def test_case_43(self): self.assertTrue(fuzzy_token_match("boldness", "bold", threshold=70))
    def test_case_44(self): self.assertFalse(fuzzy_token_match("neutral", "bold"))
    def test_case_45(self): self.assertFalse(fuzzy_token_match("subtle", "soft"))
    def test_case_46(self): self.assertFalse(fuzzy_token_match("luminous", "glowy", threshold=60))
    def test_case_47(self): self.assertFalse(fuzzy_token_match("neutral tone", "bold tone"))
    def test_case_48(self): self.assertTrue(fuzzy_token_match("bld", "bold", threshold=60))
    def test_case_49(self): self.assertFalse(fuzzy_token_match("shiny", "natural"))
    def test_case_50(self): self.assertTrue(fuzzy_token_match("dram", "dramatic", threshold=60))

if __name__ == "__main__":
    unittest.main()
