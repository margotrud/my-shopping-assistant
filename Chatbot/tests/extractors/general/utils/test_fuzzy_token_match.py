# tests/extractors/general/utils/test_fuzzy_token_match.py

import unittest
from Chatbot.extractors.general.utils.fuzzy_match import fuzzy_token_match
class TestFuzzyTokenMatch(unittest.TestCase):

    def run_case(self, a, b, expected_score):
        result = fuzzy_token_match(a, b)
        print(f"Expected: {expected_score} | Actual: {result}")
        self.assertEqual(expected_score, result)

    def test_case_01(self): self.run_case("red", "red", 100)
    def test_case_02(self): self.run_case("Red", "red", 100)
    def test_case_03(self): self.run_case(" red ", "red", 100)
    def test_case_04(self): self.run_case("blue", "blu", 100)
    def test_case_05(self): self.run_case("blu", "blue", 100)
    def test_case_06(self): self.run_case("lightblue", "blue", 81)
    def test_case_07(self): self.run_case("blue", "lightblue", 81)
    def test_case_08(self): self.run_case("green", "gren", 92)
    def test_case_09(self): self.run_case("gray", "grey", 85)
    def test_case_10(self): self.run_case("beige", "bej", 68)
    def test_case_11(self): self.run_case("nude", "neude", 82)
    def test_case_12(self): self.run_case("lavender", "lavander", 98)
    def test_case_13(self): self.run_case("yellow", "yellw", 96)
    def test_case_14(self): self.run_case("orange", "oranje", 93)
    def test_case_15(self): self.run_case("rose", "rosÃ©", 85)
    def test_case_16(self): self.run_case("offwhite", "white", 50)
    def test_case_17(self): self.run_case("blush", "bllush", 96)
    def test_case_18(self): self.run_case("mint", "mnt", 76)
    def test_case_19(self): self.run_case("taupe", "tap", 81)
    def test_case_20(self): self.run_case("glossy", "glosy", 96)
    def test_case_21(self): self.run_case("shine", "shiny", 90)
    def test_case_22(self): self.run_case("muted", "mutted", 96)
    def test_case_23(self): self.run_case("dusty", "dust", 100)
    def test_case_24(self): self.run_case("warm", "wram", 75)
    def test_case_25(self): self.run_case("cool", "coal", 50)
    def test_case_26(self): self.run_case("bronze", "bronz", 100)
    def test_case_27(self): self.run_case("peach", "peech", 90)
    def test_case_28(self): self.run_case("olive", "oliv", 100)
    def test_case_29(self): self.run_case("mauve", "mouve", 80)
    def test_case_30(self): self.run_case("moss", "moos", 77)
    def test_case_31(self): self.run_case("ink", "inc", 77)
    def test_case_32(self): self.run_case("charcoal", "charcol", 100)
    def test_case_33(self): self.run_case("deep", "deap", 85)
    def test_case_34(self): self.run_case("ivory", "ivori", 90)
    def test_case_35(self): self.run_case("mahogany", "mahogani", 98)
    def test_case_36(self): self.run_case("eggplant", "egplant", 100)
    def test_case_37(self): self.run_case("sapphire", "saphire", 100)
    def test_case_38(self): self.run_case("emerald", "emrald", 98)
    def test_case_39(self): self.run_case("ruby", "rubby", 92)
    def test_case_40(self): self.run_case("silver", "sliver", 83)
    def test_case_41(self): self.run_case("gold", "goldd", 100)
    def test_case_42(self): self.run_case("tan", "taan", 86)
    def test_case_43(self): self.run_case("cream", "creme", 90)
    def test_case_44(self): self.run_case("apricot", "aprikot", 96)
    def test_case_45(self): self.run_case("cerulean", "serulean", 88)
    def test_case_46(self): self.run_case("teal", "teil", 85)
    def test_case_47(self): self.run_case("indigo", "indagoo", 90)
    def test_case_48(self): self.run_case("periwinkle", "periwinckle", 100)
    def test_case_49(self): self.run_case("chartreuse", "shartreuse", 90)
    def test_case_50(self): self.run_case("fuchsia", "fuschia", 96)

