import unittest
import spacy
from Chatbot.extractors.color.shared.vocab import known_tones
from Chatbot.extractors.color.extraction.standalone import extract_lone_tones

nlp = spacy.load("en_core_web_sm")

class TestExtractLoneTones(unittest.TestCase):
    def run_case(self, text, expected):
        tokens = nlp(text)
        result = extract_lone_tones(tokens, known_tones)
        self.assertEqual(set(expected), set(result), f"\nExpected: {expected}\nActual:   {result}")

    def test_case_01(self): self.run_case("pink", ["pink"])
    def test_case_02(self): self.run_case("I like beige", ["beige"])
    def test_case_03(self): self.run_case("blush and nude", ["nude"])
    def test_case_04(self): self.run_case("soft pink lipstick", ["pink"])
    def test_case_05(self): self.run_case("deep violet tones", ["violet"])
    def test_case_06(self): self.run_case("just rose", ["rose"])
    def test_case_07(self): self.run_case("peach", ["peach"])
    def test_case_08(self): self.run_case("lavender", ["lavender"])
    def test_case_09(self): self.run_case("mint lipstick", ["mint"])
    def test_case_10(self): self.run_case("I love nude makeup", ["nude"])
    def test_case_11(self): self.run_case("bronzer with gold", ["gold"])
    def test_case_12(self): self.run_case("mascara and pink", ["pink"])
    def test_case_13(self): self.run_case("coral", ["coral"])
    def test_case_14(self): self.run_case("blue", ["blue"])
    def test_case_15(self): self.run_case("neon red", ["red"])
    def test_case_16(self): self.run_case("yellow base", ["yellow"])
    def test_case_17(self): self.run_case("blush is good", [])
    def test_case_18(self): self.run_case("something soft and pink", ["pink"])
    def test_case_19(self): self.run_case("taupe", ["taupe"])
    def test_case_20(self): self.run_case("grey", ["grey"])
    def test_case_21(self): self.run_case("green lipstick", ["green"])
    def test_case_22(self): self.run_case("violet shadows", ["violet"])
    def test_case_23(self): self.run_case("burnt orange", ["orange"])
    def test_case_24(self): self.run_case("beige skin", ["beige"])
    def test_case_25(self): self.run_case("magenta", ["magenta"])
    def test_case_26(self): self.run_case("charcoal", ["charcoal"])
    def test_case_27(self): self.run_case("white gloss", ["white"])
    def test_case_28(self): self.run_case("brown eyeliner", ["brown"])
    def test_case_29(self): self.run_case("silver", ["silver"])
    def test_case_30(self): self.run_case("ivory", ["ivory"])
    def test_case_31(self): self.run_case("soft peach glow", ["peach"])
    def test_case_32(self): self.run_case("natural blush", [])
    def test_case_33(self): self.run_case("shiny lipstick with bronze", ["bronze"])
    def test_case_34(self): self.run_case("rose mascara", ["rose"])
    def test_case_35(self): self.run_case("blush and bronze", ["bronze"])
    def test_case_36(self): self.run_case("warm toned taupe", ["taupe"])
    def test_case_37(self): self.run_case("icy white", ["white"])
    def test_case_38(self): self.run_case("matte pink", ["pink"])
    def test_case_39(self): self.run_case("mauve foundation", ["mauve"])
    def test_case_40(self): self.run_case("hazel", ["hazel"])
    def test_case_41(self): self.run_case("soft periwinkle lipstick", ["periwinkle"])
    def test_case_42(self): self.run_case("terracotta", ["terracotta"])
    def test_case_43(self): self.run_case("blush and sage", ["sage"])
    def test_case_44(self): self.run_case("champagne gloss", ["champagne"])
    def test_case_45(self): self.run_case("aubergine", ["aubergine"])
    def test_case_46(self): self.run_case("nude and blush", ["nude"])
    def test_case_47(self): self.run_case("apricot", ["apricot"])
    def test_case_48(self): self.run_case("midnight blue", ["midnight", "blue"])
    def test_case_49(self): self.run_case("coral blush", ["coral"])
    def test_case_50(self): self.run_case("petal tones", [])

if __name__ == "__main__":
    unittest.main()
