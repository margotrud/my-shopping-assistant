import unittest
from Chatbot.extractors.color.utils.modifier_resolution import should_suppress_compound

class TestShouldSuppressCompound(unittest.TestCase):
    def run_case(self, mod, tone, expected):
        result = should_suppress_compound(mod, tone)
        self.assertEqual(result, expected, f"mod='{mod}', tone='{tone}' â†’ Expected {expected}, got {result}")

    def test_case_01(self): self.run_case("red", "red", True)
    def test_case_02(self): self.run_case("blue", "blue", True)
    def test_case_03(self): self.run_case("green", "green", True)
    def test_case_04(self): self.run_case("soft", "soft", True)
    def test_case_05(self): self.run_case("dark", "dark", True)
    def test_case_06(self): self.run_case("bright", "bright", True)
    def test_case_07(self): self.run_case("red", "redish", True)
    def test_case_08(self): self.run_case("red", "red-orange", True)
    def test_case_09(self): self.run_case("blue", "blueish", True)
    def test_case_10(self): self.run_case("blue", "blue-green", True)
    def test_case_11(self): self.run_case("dark", "darkblue", True)
    def test_case_12(self): self.run_case("light", "lightbrown", True)
    def test_case_13(self): self.run_case("soft", "softpink", True)
    def test_case_14(self): self.run_case("warm", "warmred", True)
    def test_case_15(self): self.run_case("cool", "coolblue", True)
    def test_case_16(self): self.run_case("green", "greenyellow", True)
    def test_case_17(self): self.run_case("neutral", "neutralgrey", True)
    def test_case_18(self): self.run_case("muted", "mutedrose", True)
    def test_case_19(self): self.run_case("red", "darkred", False)
    def test_case_20(self): self.run_case("blue", "lightblue", False)
    def test_case_21(self): self.run_case("soft", "hardsoft", False)
    def test_case_22(self): self.run_case("bright", "brightest", True)
    def test_case_23(self): self.run_case("warm", "coolwarm", False)
    def test_case_24(self): self.run_case("cool", "coolish", True)
    def test_case_25(self): self.run_case("pale", "paleish", True)
    def test_case_26(self): self.run_case("pale", "pal", True)
    def test_case_27(self): self.run_case("pal", "pale", True)
    def test_case_28(self): self.run_case("red", "blue", False)
    def test_case_29(self): self.run_case("blue", "green", False)
    def test_case_30(self): self.run_case("soft", "rough", False)
    def test_case_31(self): self.run_case("dark", "light", False)
    def test_case_32(self): self.run_case("bright", "dim", False)
    def test_case_33(self): self.run_case("warm", "cold", False)
    def test_case_34(self): self.run_case("cool", "hot", False)
    def test_case_35(self): self.run_case("neutral", "vibrant", False)
    def test_case_36(self): self.run_case("muted", "loud", False)
    def test_case_37(self): self.run_case("red", "redishpink", True)
    def test_case_38(self): self.run_case("soft", "softpink", True)
    def test_case_39(self): self.run_case("light", "lightest", True)
    def test_case_40(self): self.run_case("dark", "darkest", True)
    def test_case_41(self): self.run_case("bright", "brightest", True)
    def test_case_42(self): self.run_case("warm", "warmest", True)
    def test_case_43(self): self.run_case("cool", "coolest", True)
    def test_case_44(self): self.run_case("neutral", "neutralest", True)
    def test_case_45(self): self.run_case("muted", "mutedest", True)
    def test_case_46(self): self.run_case("dust", "dusty", True)
    def test_case_47(self): self.run_case("dusty", "dust", True)
    def test_case_48(self): self.run_case("dust", "dustdust", True)
    def test_case_49(self): self.run_case("dustdust", "dust", True)
    def test_case_50(self): self.run_case("dust", "dust", True)

if __name__ == "__main__":
    unittest.main()
